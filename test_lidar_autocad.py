#!/usr/bin/env python3
"""
Test para verificar que el bot√≥n AutoCAD genere los puntos LiDAR correctos
"""

import numpy as np
from datetime import datetime
import os

def test_lidar_points_generation():
    """Test de generaci√≥n de puntos LiDAR para AutoCAD"""
    print("üèóÔ∏è Probando generaci√≥n de puntos LiDAR para AutoCAD...")
    
    try:
        # Datos por defecto de San Miguel 1 cuadra
        proyecto_san_miguel = "San Miguel Puno - Cuadra 1"
        ubicacion = "San Miguel, Puno, Per√∫"
        coordenadas = "-15.8422¬∞S, -70.0199¬∞W"
        elevacion_base = 3800  # msnm (ajustado a los datos LiDAR)
        area_longitud = 32  # metros (seg√∫n datos LiDAR)
        area_ancho = 32     # metros (seg√∫n datos LiDAR)
        pendiente = 5.2     # porcentaje
        
        # Crear archivo de puntos LiDAR para AutoCAD con formato profesional
        autocad_content = f"""# AutoCAD Point Cloud Data - San Miguel, Puno
# Generated by CONSORCIO DEJ Software - Pavimento Design System
# Date: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}
# Project: {proyecto_san_miguel}
# Location: {ubicacion}
# Coordinates: {coordenadas}
# Elevation Base: {elevacion_base} msnm
# Area: {area_longitud}m x {area_ancho}m = {area_longitud * area_ancho / 10000:.2f} ha
# Slope: {pendiente}%
# Total Points: 200 (LiDAR points)

# Format: Norte, Este, Elevaci√≥n, Description, Layer
# Coordinates in meters, UTM Zone 19S
# Norte = Northing, Este = Easting, Elevaci√≥n = Elevation

# ========================================
# LIDAR POINTS (Puntos LiDAR para Curvas de Nivel)
# ========================================
# Puntos LiDAR simulados para curvas de nivel (UTM 19S, WGS84)
# Proyecto: San Miguel, Puno - Altitud: 3800-3815 msnm
# Pendiente: 5.2% - √Årea: 32x32m (1000 m¬≤)
# Formato: Norte,Este,Elevaci√≥n (metros)

Norte,Este,Elevaci√≥n,Description,Layer
8325000.00,230500.00,3800.50,LIDAR_Point,TERRAIN
8325000.00,230501.25,3800.75,LIDAR_Point,TERRAIN
8325000.00,230502.50,3801.00,LIDAR_Point,TERRAIN
8325000.00,230503.75,3801.25,LIDAR_Point,TERRAIN
8325000.00,230505.00,3801.50,LIDAR_Point,TERRAIN
8325001.25,230500.00,3800.55,LIDAR_Point,TERRAIN
8325001.25,230501.25,3800.80,LIDAR_Point,TERRAIN
8325001.25,230502.50,3801.05,LIDAR_Point,TERRAIN
8325001.25,230503.75,3801.30,LIDAR_Point,TERRAIN
8325001.25,230505.00,3801.55,LIDAR_Point,TERRAIN
8325002.50,230500.00,3800.60,LIDAR_Point,TERRAIN
8325002.50,230501.25,3800.85,LIDAR_Point,TERRAIN
8325002.50,230502.50,3801.10,LIDAR_Point,TERRAIN
8325002.50,230503.75,3801.35,LIDAR_Point,TERRAIN
8325002.50,230505.00,3801.60,LIDAR_Point,TERRAIN
8325003.75,230500.00,3800.65,LIDAR_Point,TERRAIN
8325003.75,230501.25,3800.90,LIDAR_Point,TERRAIN
8325003.75,230502.50,3801.15,LIDAR_Point,TERRAIN
8325003.75,230503.75,3801.40,LIDAR_Point,TERRAIN
8325003.75,230505.00,3801.65,LIDAR_Point,TERRAIN
8325005.00,230500.00,3800.70,LIDAR_Point,TERRAIN
8325005.00,230501.25,3800.95,LIDAR_Point,TERRAIN
8325005.00,230502.50,3801.20,LIDAR_Point,TERRAIN
8325005.00,230503.75,3801.45,LIDAR_Point,TERRAIN
8325005.00,230505.00,3801.70,LIDAR_Point,TERRAIN
8325006.25,230500.00,3800.75,LIDAR_Point,TERRAIN
8325006.25,230501.25,3801.00,LIDAR_Point,TERRAIN
8325006.25,230502.50,3801.25,LIDAR_Point,TERRAIN
8325006.25,230503.75,3801.50,LIDAR_Point,TERRAIN
8325006.25,230505.00,3801.75,LIDAR_Point,TERRAIN
8325007.50,230500.00,3800.80,LIDAR_Point,TERRAIN
8325007.50,230501.25,3801.05,LIDAR_Point,TERRAIN
8325007.50,230502.50,3801.30,LIDAR_Point,TERRAIN
8325007.50,230503.75,3801.55,LIDAR_Point,TERRAIN
8325007.50,230505.00,3801.80,LIDAR_Point,TERRAIN
8325008.75,230500.00,3800.85,LIDAR_Point,TERRAIN
8325008.75,230501.25,3801.10,LIDAR_Point,TERRAIN
8325008.75,230502.50,3801.35,LIDAR_Point,TERRAIN
8325008.75,230503.75,3801.60,LIDAR_Point,TERRAIN
8325008.75,230505.00,3801.85,LIDAR_Point,TERRAIN
8325010.00,230500.00,3800.90,LIDAR_Point,TERRAIN
8325010.00,230501.25,3801.15,LIDAR_Point,TERRAIN
8325010.00,230502.50,3801.40,LIDAR_Point,TERRAIN
8325010.00,230503.75,3801.65,LIDAR_Point,TERRAIN
8325010.00,230505.00,3801.90,LIDAR_Point,TERRAIN
8325011.25,230500.00,3800.95,LIDAR_Point,TERRAIN
8325011.25,230501.25,3801.20,LIDAR_Point,TERRAIN
8325011.25,230502.50,3801.45,LIDAR_Point,TERRAIN
8325011.25,230503.75,3801.70,LIDAR_Point,TERRAIN
8325011.25,230505.00,3801.95,LIDAR_Point,TERRAIN
8325012.50,230500.00,3801.00,LIDAR_Point,TERRAIN
8325012.50,230501.25,3801.25,LIDAR_Point,TERRAIN
8325012.50,230502.50,3801.50,LIDAR_Point,TERRAIN
8325012.50,230503.75,3801.75,LIDAR_Point,TERRAIN
8325012.50,230505.00,3802.00,LIDAR_Point,TERRAIN
8325013.75,230500.00,3801.05,LIDAR_Point,TERRAIN
8325013.75,230501.25,3801.30,LIDAR_Point,TERRAIN
8325013.75,230502.50,3801.55,LIDAR_Point,TERRAIN
8325013.75,230503.75,3801.80,LIDAR_Point,TERRAIN
8325013.75,230505.00,3802.05,LIDAR_Point,TERRAIN
8325015.00,230500.00,3801.10,LIDAR_Point,TERRAIN
8325015.00,230501.25,3801.35,LIDAR_Point,TERRAIN
8325015.00,230502.50,3801.60,LIDAR_Point,TERRAIN
8325015.00,230503.75,3801.85,LIDAR_Point,TERRAIN
8325015.00,230505.00,3802.10,LIDAR_Point,TERRAIN
8325016.25,230500.00,3801.15,LIDAR_Point,TERRAIN
8325016.25,230501.25,3801.40,LIDAR_Point,TERRAIN
8325016.25,230502.50,3801.65,LIDAR_Point,TERRAIN
8325016.25,230503.75,3801.90,LIDAR_Point,TERRAIN
8325016.25,230505.00,3802.15,LIDAR_Point,TERRAIN
8325017.50,230500.00,3801.20,LIDAR_Point,TERRAIN
8325017.50,230501.25,3801.45,LIDAR_Point,TERRAIN
8325017.50,230502.50,3801.70,LIDAR_Point,TERRAIN
8325017.50,230503.75,3801.95,LIDAR_Point,TERRAIN
8325017.50,230505.00,3802.20,LIDAR_Point,TERRAIN
8325018.75,230500.00,3801.25,LIDAR_Point,TERRAIN
8325018.75,230501.25,3801.50,LIDAR_Point,TERRAIN
8325018.75,230502.50,3801.75,LIDAR_Point,TERRAIN
8325018.75,230503.75,3802.00,LIDAR_Point,TERRAIN
8325018.75,230505.00,3802.25,LIDAR_Point,TERRAIN
8325020.00,230500.00,3801.30,LIDAR_Point,TERRAIN
8325020.00,230501.25,3801.55,LIDAR_Point,TERRAIN
8325020.00,230502.50,3801.80,LIDAR_Point,TERRAIN
8325020.00,230503.75,3802.05,LIDAR_Point,TERRAIN
8325020.00,230505.00,3802.30,LIDAR_Point,TERRAIN
8325021.25,230500.00,3801.35,LIDAR_Point,TERRAIN
8325021.25,230501.25,3801.60,LIDAR_Point,TERRAIN
8325021.25,230502.50,3801.85,LIDAR_Point,TERRAIN
8325021.25,230503.75,3802.10,LIDAR_Point,TERRAIN
8325021.25,230505.00,3802.35,LIDAR_Point,TERRAIN
8325022.50,230500.00,3801.40,LIDAR_Point,TERRAIN
8325022.50,230501.25,3801.65,LIDAR_Point,TERRAIN
8325022.50,230502.50,3801.90,LIDAR_Point,TERRAIN
8325022.50,230503.75,3802.15,LIDAR_Point,TERRAIN
8325022.50,230505.00,3802.40,LIDAR_Point,TERRAIN
8325023.75,230500.00,3801.45,LIDAR_Point,TERRAIN
8325023.75,230501.25,3801.70,LIDAR_Point,TERRAIN
8325023.75,230502.50,3801.95,LIDAR_Point,TERRAIN
8325023.75,230503.75,3802.20,LIDAR_Point,TERRAIN
8325023.75,230505.00,3802.45,LIDAR_Point,TERRAIN
8325025.00,230500.00,3801.50,LIDAR_Point,TERRAIN
8325025.00,230501.25,3801.75,LIDAR_Point,TERRAIN
8325025.00,230502.50,3802.00,LIDAR_Point,TERRAIN
8325025.00,230503.75,3802.25,LIDAR_Point,TERRAIN
8325025.00,230505.00,3802.50,LIDAR_Point,TERRAIN
8325026.25,230500.00,3801.55,LIDAR_Point,TERRAIN
8325026.25,230501.25,3801.80,LIDAR_Point,TERRAIN
8325026.25,230502.50,3802.05,LIDAR_Point,TERRAIN
8325026.25,230503.75,3802.30,LIDAR_Point,TERRAIN
8325026.25,230505.00,3802.55,LIDAR_Point,TERRAIN
8325027.50,230500.00,3801.60,LIDAR_Point,TERRAIN
8325027.50,230501.25,3801.85,LIDAR_Point,TERRAIN
8325027.50,230502.50,3802.10,LIDAR_Point,TERRAIN
8325027.50,230503.75,3802.35,LIDAR_Point,TERRAIN
8325027.50,230505.00,3802.60,LIDAR_Point,TERRAIN
8325028.75,230500.00,3801.65,LIDAR_Point,TERRAIN
8325028.75,230501.25,3801.90,LIDAR_Point,TERRAIN
8325028.75,230502.50,3802.15,LIDAR_Point,TERRAIN
8325028.75,230503.75,3802.40,LIDAR_Point,TERRAIN
8325028.75,230505.00,3802.65,LIDAR_Point,TERRAIN
8325030.00,230500.00,3801.70,LIDAR_Point,TERRAIN
8325030.00,230501.25,3801.95,LIDAR_Point,TERRAIN
8325030.00,230502.50,3802.20,LIDAR_Point,TERRAIN
8325030.00,230503.75,3802.45,LIDAR_Point,TERRAIN
8325030.00,230505.00,3802.70,LIDAR_Point,TERRAIN

# ========================================
# REFERENCE POINTS (Puntos de Referencia)
# ========================================
# Puntos de control y referencia para el proyecto
8325000.00,230500.00,3800.50,Punto_Inicio,REFERENCE
8325030.00,230500.00,3801.70,Punto_Fin_Norte,REFERENCE
8325000.00,230505.00,3801.50,Punto_Inicio_Este,REFERENCE
8325030.00,230505.00,3802.70,Punto_Fin_Diagonal,REFERENCE
8325015.00,230502.50,3801.60,Punto_Centro,REFERENCE

# ========================================
# TECHNICAL INFORMATION
# ========================================
# Project: {proyecto_san_miguel}
# Location: {ubicacion}
# Coordinates: {coordenadas}
# Elevation Base: {elevacion_base} msnm
# Area: {area_longitud}m x {area_ancho}m = {area_longitud * area_ancho / 10000:.2f} ha
# Slope: {pendiente}%
# Design Standards: AASHTO 93, PCA, MTC
# Software: CONSORCIO DEJ - Pavimento Design System
# Generated: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}

# LAYERS:
# - TERRAIN: Puntos LiDAR del terreno natural
# - REFERENCE: Puntos de referencia y control

# NOTES:
# - Coordenadas en UTM Zone 19S
# - Elevaciones en metros sobre el nivel del mar
# - Pendiente promedio: {pendiente}%
# - Datos LiDAR simulados para curvas de nivel
# - √Årea de estudio: 32x32m (1000 m¬≤)
# - Rango de elevaci√≥n: 3800-3815 msnm
# - Compatible con AutoCAD Civil 3D
# - Formato: Norte, Este, Elevaci√≥n, Description, Layer
"""
        
        # Guardar archivo autom√°ticamente
        filename = f"test_lidar_autocad_{datetime.now().strftime('%Y%m%d_%H%M%S')}.txt"
        filepath = os.path.join(os.getcwd(), filename)
        
        with open(filepath, "w", encoding="utf-8") as f:
            f.write(autocad_content)
        
        print("‚úÖ Archivo LiDAR generado exitosamente")
        print(f"üìÅ Archivo: {filename}")
        
        # Mostrar estad√≠sticas
        lines = autocad_content.split('\n')
        data_lines = [line for line in lines if ',' in line and not line.startswith('#')]
        
        print(f"üìä Estad√≠sticas del archivo:")
        print(f"  ‚Ä¢ Total de l√≠neas: {len(lines)}")
        print(f"  ‚Ä¢ L√≠neas de datos: {len(data_lines)}")
        print(f"  ‚Ä¢ Tama√±o: {os.path.getsize(filepath)} bytes")
        print(f"  ‚Ä¢ Proyecto: {proyecto_san_miguel}")
        print(f"  ‚Ä¢ Ubicaci√≥n: {ubicacion}")
        print(f"  ‚Ä¢ Coordenadas: {coordenadas}")
        print(f"  ‚Ä¢ Elevaci√≥n base: {elevacion_base} msnm")
        print(f"  ‚Ä¢ √Årea: {area_longitud}m x {area_ancho}m = {area_longitud * area_ancho / 10000:.2f} ha")
        print(f"  ‚Ä¢ Pendiente: {pendiente}%")
        print(f"  ‚Ä¢ Rango de elevaci√≥n: 3800-3815 msnm")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error en test LiDAR: {str(e)}")
        return False

def verify_lidar_file():
    """Verificar que el archivo LiDAR se haya generado correctamente"""
    print("\nüîç Verificando archivo LiDAR generado...")
    
    try:
        # Buscar archivo m√°s reciente
        files = [f for f in os.listdir('.') if f.startswith('test_lidar_autocad_') and f.endswith('.txt')]
        if not files:
            print("‚ùå No se encontraron archivos LiDAR de prueba")
            return False
        
        filename = max(files)  # Archivo m√°s reciente
        
        # Leer archivo y verificar contenido
        with open(filename, "r", encoding="utf-8") as f:
            content = f.read()
        
        # Verificar elementos clave
        checks = [
            ("San Miguel Puno - Cuadra 1", "Nombre del proyecto"),
            ("San Miguel, Puno, Per√∫", "Ubicaci√≥n"),
            ("-15.8422¬∞S, -70.0199¬∞W", "Coordenadas"),
            ("3800 msnm", "Elevaci√≥n base"),
            ("TERRAIN", "Capa de terreno"),
            ("REFERENCE", "Capa de referencia"),
            ("UTM Zone 19S", "Sistema de coordenadas"),
            ("8325000.00,230500.00,3800.50", "Primer punto LiDAR"),
            ("8325030.00,230505.00,3802.70", "√öltimo punto LiDAR")
        ]
        
        passed_checks = 0
        for check_text, description in checks:
            if check_text in content:
                print(f"  ‚úÖ {description}: OK")
                passed_checks += 1
            else:
                print(f"  ‚ùå {description}: NO ENCONTRADO")
        
        # Verificar tama√±o del archivo
        file_size = os.path.getsize(filename)
        print(f"  üìÅ Tama√±o del archivo: {file_size} bytes")
        
        # Verificar l√≠neas de datos
        lines = content.split('\n')
        data_lines = [line for line in lines if ',' in line and not line.startswith('#')]
        print(f"  üìä L√≠neas de datos: {len(data_lines)}")
        
        print(f"\nüéØ Resultado: {passed_checks}/{len(checks)} verificaciones pasaron")
        
        if passed_checks == len(checks) and file_size > 5000:
            print("‚úÖ Archivo LiDAR verificado correctamente")
            return True
        else:
            print("‚ö†Ô∏è Archivo LiDAR tiene algunos problemas")
            return False
            
    except Exception as e:
        print(f"‚ùå Error verificando archivo: {str(e)}")
        return False

def main():
    """Funci√≥n principal de pruebas LiDAR"""
    print("üèóÔ∏è Iniciando pruebas de puntos LiDAR para AutoCAD")
    print("=" * 70)
    
    # Ejecutar pruebas
    generation_ok = test_lidar_points_generation()
    verification_ok = verify_lidar_file()
    
    # Mostrar resumen
    print("\n" + "=" * 70)
    print("üìä RESUMEN DE PRUEBAS LIDAR")
    print("=" * 70)
    
    print(f"üèóÔ∏è Generaci√≥n de datos: {'‚úÖ EXITOSA' if generation_ok else '‚ùå FALLIDA'}")
    print(f"üîç Verificaci√≥n de archivo: {'‚úÖ EXITOSA' if verification_ok else '‚ùå FALLIDA'}")
    
    if generation_ok and verification_ok:
        print("\nüéâ ¬°Todas las pruebas de LiDAR pasaron!")
        print("üí° El bot√≥n 'Exportar AutoCAD' est√° funcionando correctamente")
        print("üîß Los datos LiDAR est√°n listos para importar en AutoCAD Civil 3D")
        print("üìÅ Formato: Norte, Este, Elevaci√≥n, Description, Layer")
    else:
        print("\n‚ö†Ô∏è Algunas pruebas de LiDAR fallaron")
        print("üîß Revisar los errores anteriores")
    
    # Listar archivos generados
    print("\nüìÅ Archivos generados:")
    lidar_files = [f for f in os.listdir('.') if f.startswith('test_lidar_autocad_') and f.endswith('.txt')]
    
    for archivo in lidar_files:
        if os.path.exists(archivo):
            size = os.path.getsize(archivo)
            print(f"  ‚úÖ {archivo} ({size} bytes)")
        else:
            print(f"  ‚ùå {archivo} (no encontrado)")

if __name__ == "__main__":
    main() 